create table if not exists CATEGORIES
(
    CATEGORY_ID BIGINT generated by default as identity not null,
    NAME        VARCHAR not null unique,
    constraint CATEGORIES_PK
        primary key (CATEGORY_ID)
);

create table if not exists LOCATION
(
    LOCATION_ID BIGINT generated by default as identity not null
        primary key,
    LAT         DOUBLE PRECISION not null,
    LON         DOUBLE PRECISION not null
);

create table if not exists USERS
(
    USER_ID BIGINT generated by default as identity not null,
    EMAIL   VARCHAR not null
        unique,
    NAME    VARCHAR not null,
    constraint ID
        primary key (USER_ID)
);

create table if not exists EVENTS
(
    EVENT_ID           BIGINT generated by default as identity not null
        primary key,
    ANNOTATION         VARCHAR                   not null,
    CATEGORY           BIGINT                              not null,
    CREATED_ON         TIMESTAMP without time zone,
    DESCRIPTION        VARCHAR,
    EVENT_DATE         TIMESTAMP without time zone         not null,
    INITIATOR          BIGINT                              not null,
    LOCATION           BIGINT                              not null,
    PAID               BOOLEAN                             not null,
    PARTICIPANT_LIMIT  INTEGER           default 0         not null,
    PUBLISHED_ON       TIMESTAMP without time zone,
    REQUEST_MODERATION BOOLEAN           default TRUE      not null,
    STATE              VARCHAR default 'PENDING' not null,
    TITLE              VARCHAR                   not null,
    constraint EVENTS_CATEGORIES_CATEGORY_ID_FK
        foreign key (CATEGORY) references CATEGORIES,
    constraint EVENTS_LOCATION_LOCATION_ID_FK
        foreign key (LOCATION) references LOCATION,
    constraint EVENTS_USERS_USER_ID_FK
        foreign key (INITIATOR) references USERS
);

create table if not exists REQUESTS
(
    REQUEST_ID        BIGINT generated by default as identity not null,
    CREATED   TIMESTAMP without time zone not null,
    EVENT_ID     BIGINT            not null,
    REQUESTER BIGINT            not null,
    STATUS    VARCHAR not null,
    constraint REQUESTS_PK
        primary key (REQUEST_ID),
    constraint REQUESTS_EVENTS_EVENT_ID_FK
        foreign key (EVENT_ID) references EVENTS,
    constraint REQUESTS_USERS_USER_ID_FK
        foreign key (REQUESTER) references USERS
);

create table if not exists COMPILATIONS
(
    COMPILATION_ID   BIGINT generated by default as identity not null
        primary key,
    COMPILATION_NAME VARCHAR not null
        unique,
    PINNED           BOOLEAN           not null
);

create table if not exists EVENTS_COMPILATIONS
(
    EVENTS_COMPILATIONS_ID BIGINT generated by default as identity not null
        primary key,
    EVENT_ID               BIGINT not null,
    COMPILATION_ID         BIGINT not null,
    constraint EVENTS_COMPILATIONS_COMPILATIONS_COMPILATION_ID_FK
        foreign key (COMPILATION_ID) references COMPILATIONS,
    constraint EVENTS_COMPILATIONS_EVENTS_EVENT_ID_FK
        foreign key (EVENT_ID) references EVENTS
);